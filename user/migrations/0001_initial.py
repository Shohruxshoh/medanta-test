# Generated by Django 4.1.7 on 2023-03-29 05:08

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Nomi')),
                ('sort', models.IntegerField(blank=True, default=1)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Viloyat',
                'verbose_name_plural': 'Viloyatlar',
                'ordering': ['sort', 'title'],
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Nomi')),
                ('sort', models.IntegerField(blank=True, default=1)),
                ('is_active', models.BooleanField(default=True)),
                ('region', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.region', verbose_name='Viloyat')),
            ],
            options={
                'verbose_name': 'Tuman/Shahar',
                'verbose_name_plural': 'Tumanlar/Shaharlar',
                'ordering': ['sort', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Clinic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Klinika nomi')),
                ('inn', models.IntegerField(verbose_name='INN')),
                ('phone', models.IntegerField(blank=True, null=True, unique=True, validators=[django.core.validators.MaxValueValidator(999999999), django.core.validators.MinValueValidator(100000000)], verbose_name='Tel raqam')),
                ('phone2', models.IntegerField(blank=True, null=True, unique=True, validators=[django.core.validators.MaxValueValidator(999999999), django.core.validators.MinValueValidator(100000000)], verbose_name='Tel raqam')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.district')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.region')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_name', models.CharField(blank=True, max_length=255, verbose_name='Familiya')),
                ('first_name', models.CharField(blank=True, max_length=255, verbose_name='Ism')),
                ('middle_name', models.CharField(blank=True, max_length=255, verbose_name='Otasining ismi')),
                ('role', models.IntegerField(choices=[(1, 'Direktor'), (3, 'Shifokor'), (2, 'Hamshira'), (4, 'Qabulxona'), (5, 'Hisobchi'), (0, 'Administratsiya'), (6, 'Menejer'), (7, 'Bemor'), (8, 'Partnior')], default=7, verbose_name='Foydalanuvchi roli')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Mahalla va xonadon raqami')),
                ('email', models.EmailField(blank=True, default='', max_length=254)),
                ('birthday', models.CharField(blank=True, max_length=200, null=True)),
                ('username', models.CharField(blank=True, max_length=30)),
                ('phone', models.CharField(blank=True, max_length=13, null=True, unique=True, verbose_name='Tel raqam')),
                ('passport_seria', models.CharField(blank=True, max_length=10, null=True)),
                ('passport_number', models.CharField(blank=True, max_length=15, null=True)),
                ('person_id', models.CharField(blank=True, max_length=14, null=True, verbose_name='JShShIR')),
                ('is_installment', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(blank=True, default=False)),
                ('is_active', models.BooleanField(blank=True, default=True)),
                ('last_login', models.DateTimeField(auto_now=True, null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('gender', models.IntegerField(blank=True, choices=[(0, 'Erkak'), (1, 'Ayol')], default=0, null=True, verbose_name='Jinsi')),
                ('turbo', models.CharField(blank=True, max_length=200, null=True, validators=[django.core.validators.MinLengthValidator(5)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('clinic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.clinic')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.district', verbose_name='Tuman/Shahar')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.region', verbose_name='Viloyat')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
